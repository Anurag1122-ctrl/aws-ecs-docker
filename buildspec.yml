version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: latest
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    commands:
      - echo log in to Amazon ECR...
      - aws --version
      - echo AWS_ACCOUNT_ID ${AWS_ACCOUNT_ID}
      - ECR_REGION=${CD_ECR_REGION:-ap-southeast-1}
      - echo ECR_REGION ${ECR_REGION}
      - ECR_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com
      - echo ECR_URI ${ECR_URI}
      - ECR_REPOSITORY_NAME=${CD_ECR_REPOSITORY_NAME:-digitalsme-node-app-check}
      - echo ECR_REPOSITORY_NAME ${ECR_REPOSITORY_NAME}
      - REPOSITORY_URI=$ECR_URI/$ECR_REPOSITORY_NAME
      - echo REPOSITORY_URI ${REPOSITORY_URI}
      - IMAGE_BUILD_ENV=${CD_IMAGE_BUILD_ENV:-}
      - echo IMAGE_TAG $IMAGE_TAG
      - REPOSITORY_URI=193980408680.dkr.ecr.ap-southeast-1.amazonaws.com/digitalsme-node-app-check
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image.
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo write definitions file...
      - printf '[{"name":"digitalsme-prod-node-app","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files: imagedefinitions.json
